import streamlit as st
from pythainlp import word_tokenize

# ‡πÇ‡∏´‡∏°‡∏î‡πÅ‡∏ä‡∏ó‡∏ö‡∏≠‡∏ó
MODES = {
    "‡∏Ñ‡∏∏‡∏ì‡∏¢‡πà‡∏≤": "‡πÇ‡∏≠‡πã ‡πÜ ‡∏´‡∏•‡∏≤‡∏ô‡∏£‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡∏¢‡πà‡∏≤ ‡∏¢‡πà‡∏≤‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡∏´‡∏ô‡∏π‡∏´‡∏≤‡∏¢‡πÄ‡∏´‡∏ô‡∏∑‡πà‡∏≠‡∏¢‡∏ô‡∏∞‡∏•‡∏π‡∏Å üíó",
    "‡∏ü‡∏µ‡∏•‡πÅ‡∏ü‡∏ô": "‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏Å‡πÄ‡∏´‡∏ô‡∏∑‡πà‡∏≠‡∏¢‡∏°‡∏≤‡∏Å‡πÄ‡∏•‡∏¢‡πÉ‡∏ä‡πà‡πÑ‡∏´‡∏°~ ‡∏°‡∏≤‡∏Å‡∏≠‡∏î ‡πÜ ‡∏ô‡∏∞ üíï",
    "‡πÄ‡∏î‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢": "‡∏á‡∏∑‡∏≠‡∏≠ ‡∏û‡∏µ‡πà‡πÄ‡∏´‡∏ô‡∏∑‡πà‡∏≠‡∏¢‡∏´‡∏£‡∏≠ ‡πÄ‡∏Ñ‡πâ‡∏≤‡∏à‡∏∞‡πÄ‡∏õ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏´‡∏ô‡∏∑‡πà‡∏≠‡∏¢‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÉ‡∏´‡πâ~ ‡∏ü‡∏π‡πà‡πÜ üß∏"
}

# ‡πÄ‡∏Å‡πá‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÅ‡∏ä‡∏ó
if "chat_history" not in st.session_state:
    st.session_state.chat_history = []

# ‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏±‡∏ß
st.markdown("<h1 style='text-align:center;'>üßò‚Äç‚ôÄÔ∏è ‡πÅ‡∏ä‡∏ó‡∏ö‡∏≠‡∏ó‡∏Æ‡∏µ‡∏•‡πÉ‡∏à‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô</h1>", unsafe_allow_html=True)
st.markdown("<p style='text-align:center;'>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏´‡∏°‡∏î ‡πÅ‡∏•‡πâ‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢~</p>", unsafe_allow_html=True)

# ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏´‡∏°‡∏î
mode = st.radio("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á‡πÅ‡∏ä‡∏ó‡∏ö‡∏≠‡∏ó", list(MODES.keys()), horizontal=True)

# ‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏ä‡∏ó
chat_box = st.container()
with chat_box:
    for sender, msg in st.session_state.chat_history:
        align = "flex-end" if sender == "‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô" else "flex-start"
        bg = "#DCF8C6" if sender == "‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô" else "#F1F0F0"
        chat_html = f"""
        <div style='display: flex; justify-content: {align}; margin: 5px 0;'>
            <div style='background: {bg}; padding: 10px 14px; border-radius: 16px;
                        max-width: 75%; word-wrap: break-word; font-size: 15px;'>
                {msg}
            </div>
        </div>"""
        st.markdown(chat_html, unsafe_allow_html=True)

# ‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á
with st.container():
    st.markdown("---", unsafe_allow_html=True)
    col1, col2 = st.columns([9, 1])
    with col1:
        user_input = st.text_input("‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°", placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà...", label_visibility="collapsed")
    with col2:
        send_btn = st.button("üì©", use_container_width=True)

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô
def detect_mood(text):
    sad_words = ["‡πÄ‡∏´‡∏ô‡∏∑‡πà‡∏≠‡∏¢", "‡∏ó‡πâ‡∏≠", "‡∏£‡πâ‡∏≠‡∏á‡πÑ‡∏´‡πâ", "‡πÑ‡∏°‡πà‡πÑ‡∏´‡∏ß", "‡πÄ‡∏®‡∏£‡πâ‡∏≤", "‡πÄ‡∏Ñ‡∏£‡∏µ‡∏¢‡∏î", "‡πÄ‡∏ö‡∏∑‡πà‡∏≠"]
    tokens = word_tokenize(text, engine="newmm")
    for word in sad_words:
        if word in tokens:
            return "‡πÄ‡∏®‡∏£‡πâ‡∏≤"
    return "‡∏õ‡∏Å‡∏ï‡∏¥"

# ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î‡∏™‡πà‡∏á
if send_btn and user_input.strip():
    st.session_state.chat_history.append(("‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô", user_input.strip()))
    mood = detect_mood(user_input)
    reply = MODES[mode] if mood == "‡πÄ‡∏®‡∏£‡πâ‡∏≤" else "‡∏ü‡∏±‡∏á‡πÅ‡∏•‡πâ‡∏ß‡∏≠‡∏ö‡∏≠‡∏∏‡πà‡∏ô‡πÉ‡∏à üòä ‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏™‡∏î‡πÉ‡∏™‡∏ô‡∏∞~"
    st.session_state.chat_history.append(("‡πÅ‡∏ä‡∏ó‡∏ö‡∏≠‡∏ó", reply))
    st.experimental_rerun()  # ‡πÉ‡∏ä‡πâ rerun ‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢ (Streamlit ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏à‡∏∞‡πÑ‡∏°‡πà error ‡πÅ‡∏•‡πâ‡∏ß)





















