import streamlit as st
from pythainlp import word_tokenize

# ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÇ‡∏´‡∏°‡∏î‡πÅ‡∏ä‡∏ó‡∏ö‡∏≠‡∏ó
MODES = {
    "‡∏Ñ‡∏∏‡∏ì‡∏¢‡πà‡∏≤": "‡πÇ‡∏≠‡πã ‡πÜ ‡∏´‡∏•‡∏≤‡∏ô‡∏£‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡∏¢‡πà‡∏≤ ‡∏¢‡πà‡∏≤‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡∏´‡∏ô‡∏π‡∏´‡∏≤‡∏¢‡πÄ‡∏´‡∏ô‡∏∑‡πà‡∏≠‡∏¢‡∏ô‡∏∞‡∏•‡∏π‡∏Å üíó",
    "‡∏ü‡∏µ‡∏•‡πÅ‡∏ü‡∏ô": "‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏Å‡πÄ‡∏´‡∏ô‡∏∑‡πà‡∏≠‡∏¢‡∏°‡∏≤‡∏Å‡πÄ‡∏•‡∏¢‡πÉ‡∏ä‡πà‡πÑ‡∏´‡∏°~ ‡∏°‡∏≤‡∏Å‡∏≠‡∏î ‡πÜ ‡∏ô‡∏∞ üíï",
    "‡πÄ‡∏î‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢": "‡∏á‡∏∑‡∏≠‡∏≠ ‡∏û‡∏µ‡πà‡πÄ‡∏´‡∏ô‡∏∑‡πà‡∏≠‡∏¢‡∏´‡∏£‡∏≠ ‡πÄ‡∏Ñ‡πâ‡∏≤‡∏à‡∏∞‡πÄ‡∏õ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏´‡∏ô‡∏∑‡πà‡∏≠‡∏¢‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÉ‡∏´‡πâ~ ‡∏ü‡∏π‡πà‡πÜ üß∏"
}

# ‡πÄ‡∏Å‡πá‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÅ‡∏ä‡∏ó
if "chat_history" not in st.session_state:
    st.session_state.chat_history = []

# ‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏±‡∏ß
st.title("üßò‚Äç‚ôÄÔ∏è ‡πÅ‡∏ä‡∏ó‡∏ö‡∏≠‡∏ó‡∏Æ‡∏µ‡∏•‡πÉ‡∏à‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô")
st.markdown("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á‡πÅ‡∏ä‡∏ó‡∏ö‡∏≠‡∏ó ‡πÅ‡∏•‡πâ‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ö‡πà‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏•‡πà‡∏≤‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ï‡πà‡∏≤‡∏á ‡πÜ ‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢~")

# ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏´‡∏°‡∏î
mode = st.radio("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á‡πÅ‡∏ä‡∏ó‡∏ö‡∏≠‡∏ó", list(MODES.keys()), horizontal=True)

# ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏ä‡∏ó‡πÅ‡∏ö‡∏ö Bubble ‡∏ã‡πâ‡∏≤‡∏¢-‡∏Ç‡∏ß‡∏≤ (‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏ô‡∏û‡∏π‡∏î)
chat_placeholder = st.container()
with chat_placeholder:
    for sender, message in st.session_state.chat_history:
        align = "flex-end" if sender == "‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô" else "flex-start"
        bg_color = "#DCF8C6" if sender == "‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô" else "#F1F0F0"
        st.markdown(
            f"""
            <div style='display: flex; justify-content: {align}; margin: 4px 0;'>
                <div style='background-color: {bg_color}; padding: 8px 12px; border-radius: 18px; 
                            max-width: 60%; word-wrap: break-word;'>
                    {message}
                </div>
            </div>
            """, unsafe_allow_html=True
        )

# ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á
st.markdown("---", unsafe_allow_html=True)
col1, col2 = st.columns([8, 1])
with col1:
    user_input = st.text_input(" ", placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà...", key="input", label_visibility="collapsed")
with col2:
    send = st.button("üì©", use_container_width=True)

# ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏≠‡∏≤‡∏£‡∏°‡∏ì‡πå‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô
def detect_mood(text):
    sad_words = ["‡πÄ‡∏´‡∏ô‡∏∑‡πà‡∏≠‡∏¢", "‡∏ó‡πâ‡∏≠", "‡∏£‡πâ‡∏≠‡∏á‡πÑ‡∏´‡πâ", "‡πÑ‡∏°‡πà‡πÑ‡∏´‡∏ß", "‡πÄ‡∏®‡∏£‡πâ‡∏≤", "‡πÄ‡∏Ñ‡∏£‡∏µ‡∏¢‡∏î", "‡πÄ‡∏ö‡∏∑‡πà‡∏≠"]
    tokens = word_tokenize(text, engine="newmm")
    for word in sad_words:
        if word in tokens:
            return "‡πÄ‡∏®‡∏£‡πâ‡∏≤"
    return "‡∏õ‡∏Å‡∏ï‡∏¥"

# ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏î‡∏™‡πà‡∏á
if send and user_input.strip() != "":
    st.session_state.chat_history.append(("‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô", user_input.strip()))

    mood = detect_mood(user_input)
    if mood == "‡πÄ‡∏®‡∏£‡πâ‡∏≤":
        bot_reply = MODES[mode]
    else:
        bot_reply = "‡∏ü‡∏±‡∏á‡πÅ‡∏•‡πâ‡∏ß‡∏≠‡∏ö‡∏≠‡∏∏‡πà‡∏ô‡πÉ‡∏à üòä ‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏™‡∏î‡πÉ‡∏™‡∏ô‡∏∞~"

    st.session_state.chat_history.append(("‡πÅ‡∏ä‡∏ó‡∏ö‡∏≠‡∏ó", bot_reply))
    st.rerun()




















